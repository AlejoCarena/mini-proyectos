
/*Dada un matriz de 5 X 5 : 
1- Sumar y contar todos los números pares y guardarlos en un vector de 2 
valores, en la primer celda guardar la suma y en la segunda la cantidad de pares 
encontrados. 
2- Sumar y contar todos los números impares y guardarlos en un vector de 2 
valores, en la primer celda guardar la suma y en la segunda la cantidad de 
impares encontrados. */


using System.Numerics;

int[,] matriz = new int[5, 5];
    int[] vectorPares = new int[2];
    int[] vectoresImpares = new int[2];


    cargarMatriz();
    float promedioPares =punto1();
    float promedioImpares=punto2();
    mostrarResultados(promedioImpares,promedioPares);
    ordenarMatriz();

    void cargarMatriz()
    {
        Random random = new Random();
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            for (int j = 0; j < matriz.GetLength(1); j++)
            {
                matriz[i, j] = random.Next(10, 20);
            }
        }

    }

    float punto1()
    {
        /* 1- Sumar y contar todos los números pares y guardarlos en un vector de 2 
        valores, en la primer celda guardar la suma y en la segunda la cantidad de pares 
        encontrados.*/
        int sumapares = 0, suma = 0, contadorpares = 0;
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            for (int j = 0; j < matriz.GetLength(1); j++)
            {


                if (matriz[i, j] % 2 == 0)
                {
                    contadorpares++;
                    sumapares += matriz[i, j];
                }
            }
        }
        vectorPares[1] = contadorpares;
        vectorPares[0] = sumapares;
        float promedioPares=promedio(contadorpares, sumapares);
        return promedioPares;
       
    }

    float punto2()
    {
        /*2- Sumar y contar todos los números impares y guardarlos en un vector de 2 
    valores, en la primer celda guardar la suma y en la segunda la cantidad de 
    impares encontrados.*/

        int sumaimpares = 0, suma = 0, contadorimpares = 0;
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            for (int j = 0; j < matriz.GetLength(1); j++)
            {


                if (matriz[i, j] % 2 != 0)
                {
                    contadorimpares++;
                    sumaimpares += matriz[i, j];


                }
            }
        }
        vectoresImpares[1] = contadorimpares;
        vectoresImpares[0] = sumaimpares;
        float promedioImpares=promedio(contadorimpares, sumaimpares);
        return promedioImpares;
    }

    void mostrarResultados(float promedioimpares, float promedioPares)
    {
        for (int i = 0; i < matriz.GetLength(0); i++)
        {
            for (int j = 0; j < matriz.GetLength(1); j++)
            {
                Console.Write(matriz[i, j] + " ");
            }
            Console.WriteLine();

        }
        Console.WriteLine($"la suma de los numeros pares es {vectorPares[0]}, y la cantidad de numeros pares es {vectorPares[1]}");
        Console.WriteLine($"la suma de los numeros impares es {vectoresImpares[0]}, y la cantidad de numeros pares es {vectoresImpares[1]}");
        Console.WriteLine($"el promedio de impares es {promedioimpares}");
        Console.WriteLine($"el promedio de pares es {promedioPares}");

    }

    float promedio(int cantidad,int  suma)
    {
        float promedio = 0;
        promedio = (float) suma / (float) cantidad;
        return promedio;     
    }

    void ordenarMatriz()
{
    for (int i = 0; i < matriz.GetLength(0); i++)
    {
        for (int j = 0; j < matriz.GetLength(0) - 1; j++)
        {
            for (int k = 0; k < matriz.GetLength(1) - j - 1; k++)
            {
                if (matriz[i, k] > matriz[i, k + 1])
                {
                    // Intercambiar elementos si están en el orden incorrecto
                    int temp = matriz[i, k];
                    matriz[i, k] = matriz[i, k + 1];
                    matriz[i, k + 1] = temp;
                }
            }
        }
    }
    for (int i = 0; i < matriz.GetLength(0); i++)
    {
        for (int j = 0; j < matriz.GetLength(1); j++)
        {
            Console.Write(matriz[i, j] + " ");
        }
        Console.WriteLine();
    }
}

